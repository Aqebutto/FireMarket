{"ast":null,"code":"import _classCallCheck from \"/home/alex/Documents/CS/React/Fire Market/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/alex/Documents/CS/React/Fire Market/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/alex/Documents/CS/React/Fire Market/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/alex/Documents/CS/React/Fire Market/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/alex/Documents/CS/React/Fire Market/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/alex/Documents/CS/React/Fire Market/src/components/cart/PlaceOrder.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from 'material-ui/styles';\nimport Button from 'material-ui/Button';\nimport Typography from 'material-ui/Typography';\nimport Icon from 'material-ui/Icon';\nimport auth from './../auth/auth-helper';\nimport cart from './cart-helper.js';\nimport { CardElement, injectStripe } from 'react-stripe-elements';\nimport { create } from './../order/api-order.js';\nimport { Redirect } from 'react-router-dom';\n\nvar styles = function styles(theme) {\n  return {\n    subheading: {\n      color: 'rgba(88, 114, 128, 0.87)',\n      marginTop: \"20px\"\n    },\n    checkout: {\n      float: 'right',\n      margin: '20px 30px'\n    },\n    error: {\n      display: 'inline',\n      padding: \"0px 10px\"\n    },\n    errorIcon: {\n      verticalAlign: 'middle'\n    },\n    StripeElement: {\n      display: 'block',\n      margin: '24px 0 10px 10px',\n      maxWidth: '408px',\n      padding: '10px 14px',\n      boxShadow: 'rgba(50, 50, 93, 0.14902) 0px 1px 3px, rgba(0, 0, 0, 0.0196078) 0px 1px 0px',\n      borderRadius: '4px',\n      background: 'white'\n    }\n  };\n};\n\nvar PlaceOrder =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlaceOrder, _Component);\n\n  function PlaceOrder() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PlaceOrder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PlaceOrder)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      order: {},\n      error: '',\n      redirect: false\n    };\n\n    _this.placeOrder = function () {\n      _this.props.stripe.createToken().then(function (payload) {\n        if (payload.error) {\n          _this.setState({\n            error: payload.error.message\n          });\n        } else {\n          var jwt = auth.isAuthenticated();\n          create({\n            userId: jwt.user._id\n          }, {\n            t: jwt.token\n          }, _this.props.checkoutDetails, payload.token.id).then(function (data) {\n            if (data.error) {\n              _this.setState({\n                error: data.error\n              });\n            } else {\n              cart.emptyCart(function () {\n                _this.setState({\n                  'orderId': data._id,\n                  'redirect': true\n                });\n              });\n            }\n          });\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PlaceOrder, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n\n      if (this.state.redirect) {\n        return React.createElement(Redirect, {\n          to: '/order/' + this.state.orderId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        type: \"subheading\",\n        component: \"h3\",\n        className: classes.subheading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Card details\"), React.createElement(CardElement, Object.assign({\n        className: classes.StripeElement\n      }, {\n        style: {\n          base: {\n            color: '#424770',\n            letterSpacing: '0.025em',\n            fontFamily: 'Source Code Pro, Menlo, monospace',\n            '::placeholder': {\n              color: '#aab7c4'\n            }\n          },\n          invalid: {\n            color: '#9e2146'\n          }\n        }\n      }, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: classes.checkout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, this.state.error && React.createElement(Typography, {\n        component: \"span\",\n        color: \"error\",\n        className: classes.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        color: \"error\",\n        className: classes.errorIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"error\"), this.state.error), React.createElement(Button, {\n        color: \"secondary\",\n        variant: \"raised\",\n        onClick: this.placeOrder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Place Order\")));\n    }\n  }]);\n\n  return PlaceOrder;\n}(Component);\n\nPlaceOrder.propTypes = {\n  classes: PropTypes.object.isRequired,\n  checkoutDetails: PropTypes.object.isRequired\n};\nexport default injectStripe(withStyles(styles)(PlaceOrder));","map":{"version":3,"sources":["/home/alex/Documents/CS/React/Fire Market/src/components/cart/PlaceOrder.js"],"names":["React","Component","PropTypes","withStyles","Button","Typography","Icon","auth","cart","CardElement","injectStripe","create","Redirect","styles","theme","subheading","color","marginTop","checkout","float","margin","error","display","padding","errorIcon","verticalAlign","StripeElement","maxWidth","boxShadow","borderRadius","background","PlaceOrder","state","order","redirect","placeOrder","props","stripe","createToken","then","payload","setState","message","jwt","isAuthenticated","userId","user","_id","t","token","checkoutDetails","id","data","emptyCart","classes","orderId","style","base","letterSpacing","fontFamily","invalid","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport {withStyles} from 'material-ui/styles'\nimport Button from 'material-ui/Button'\nimport Typography from 'material-ui/Typography'\nimport Icon from 'material-ui/Icon'\nimport auth from './../auth/auth-helper'\nimport cart from './cart-helper.js'\nimport {CardElement, injectStripe} from 'react-stripe-elements'\nimport {create} from './../order/api-order.js'\nimport {Redirect} from 'react-router-dom'\n\nconst styles = theme => ({\n  subheading: {\n    color: 'rgba(88, 114, 128, 0.87)',\n    marginTop: \"20px\",\n  },\n  checkout: {\n    float: 'right',\n    margin: '20px 30px'\n  },\n  error: {\n    display: 'inline',\n    padding: \"0px 10px\"\n  },\n  errorIcon: {\n    verticalAlign: 'middle'\n  },\n  StripeElement: {\n    display: 'block',\n    margin: '24px 0 10px 10px',\n    maxWidth: '408px',\n    padding: '10px 14px',\n    boxShadow: 'rgba(50, 50, 93, 0.14902) 0px 1px 3px, rgba(0, 0, 0, 0.0196078) 0px 1px 0px',\n    borderRadius: '4px',\n    background: 'white'\n  }\n})\n\nclass PlaceOrder extends Component {\n  state = {\n    order: {},\n    error: '',\n    redirect: false\n  }\n\n  placeOrder = ()=>{\n    this.props.stripe.createToken().then(payload => {\n      if(payload.error){\n        this.setState({error: payload.error.message})\n      }else{\n        const jwt = auth.isAuthenticated()\n        create({userId:jwt.user._id}, {\n          t: jwt.token\n        }, this.props.checkoutDetails, payload.token.id).then((data) => {\n          if (data.error) {\n            this.setState({error: data.error})\n          } else {\n            cart.emptyCart(()=> {\n              this.setState({'orderId':data._id,'redirect': true})\n            })\n          }\n        })\n      }\n  })\n}\n\nrender() {\n    const {classes} = this.props\n    if (this.state.redirect) {\n      return (<Redirect to={'/order/' + this.state.orderId}/>)\n    }\n    return (\n    <span>\n      <Typography type=\"subheading\" component=\"h3\" className={classes.subheading}>\n        Card details\n      </Typography>\n      <CardElement\n        className={classes.StripeElement}\n          {...{style: {\n                        base: {\n                          color: '#424770',\n                          letterSpacing: '0.025em',\n                          fontFamily: 'Source Code Pro, Menlo, monospace',\n                          '::placeholder': {\n                            color: '#aab7c4',\n                          },\n                        },\n                        invalid: {\n                          color: '#9e2146',\n                        },\n                      }\n          }}\n      />\n      <div className={classes.checkout}>\n        { this.state.error &&\n          (<Typography component=\"span\" color=\"error\" className={classes.error}>\n            <Icon color=\"error\" className={classes.errorIcon}>error</Icon>\n              {this.state.error}\n          </Typography>)\n        }\n        <Button color=\"secondary\" variant=\"raised\" onClick={this.placeOrder}>Place Order</Button>\n      </div>\n    </span>)\n  }\n}\nPlaceOrder.propTypes = {\n  classes: PropTypes.object.isRequired,\n  checkoutDetails: PropTypes.object.isRequired\n}\n\nexport default injectStripe(withStyles(styles)(PlaceOrder))\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/home/alex/Documents/CS/React/Fire Market/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/alex/Documents/CS/React/Fire Market/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/alex/Documents/CS/React/Fire Market/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/alex/Documents/CS/React/Fire Market/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/alex/Documents/CS/React/Fire Market/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/alex/Documents/CS/React/Fire Market/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/alex/Documents/CS/React/Fire Market/src/components/Messages/Messages.js\";\nimport React, { Component } from 'react';\nimport { AuthUserContext } from '../Session';\nimport { withFirebase } from '../Firebase';\nimport MessageList from './MessageList';\nimport { Card, Message, Button, Loader, Form, Icon } from 'semantic-ui-react';\n\nvar Messages =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Messages, _Component);\n\n  function Messages(props) {\n    var _this;\n\n    _classCallCheck(this, Messages);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Messages).call(this, props));\n\n    _this.onListenForMessages = function () {\n      _this.setState({\n        loading: true\n      });\n\n      _this.unsubscribe = _this.props.firebase.messages().orderBy('createdAt', 'desc').limit(_this.state.limit).onSnapshot(function (snapshot) {\n        if (snapshot.size) {\n          var messages = [];\n          snapshot.forEach(function (doc) {\n            return messages.push(_objectSpread({}, doc.data(), {\n              uid: doc.id\n            }));\n          });\n\n          _this.setState({\n            messages: messages.reverse(),\n            loading: false\n          });\n        } else {\n          _this.setState({\n            messages: null,\n            loading: false\n          });\n        }\n      });\n    };\n\n    _this.onChangeText = function (event) {\n      _this.setState({\n        text: event.target.value\n      });\n    };\n\n    _this.onCreateMessage = function (event, authUser) {\n      _this.props.firebase.messages().push({\n        text: _this.state.text,\n        userId: authUser.uid,\n        createdAt: _this.props.firebase.serverValue.TIMESTAMP\n      });\n\n      _this.setState({\n        text: ''\n      });\n\n      event.preventDefault();\n    };\n\n    _this.onEditMessage = function (message, text) {\n      _this.props.firebase.message(message.uid).set(_objectSpread({}, message, {\n        text: text,\n        editedAt: _this.props.firebase.serverValue.TIMESTAMP\n      }));\n    };\n\n    _this.onRemoveMessage = function (uid) {\n      _this.props.firebase.message(uid).remove();\n    };\n\n    _this.onNextPage = function () {\n      _this.setState(function (state) {\n        return {\n          limit: state.limit + 5\n        };\n      }, _this.onListenForMessages);\n    };\n\n    _this.state = {\n      text: '',\n      loading: false,\n      messages: [],\n      limit: 5\n    };\n    return _this;\n  }\n\n  _createClass(Messages, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.onListenForMessages();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unsubscribe();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var users = this.props.users;\n      var _this$state = this.state,\n          text = _this$state.text,\n          messages = _this$state.messages,\n          loading = _this$state.loading;\n      return React.createElement(AuthUserContext.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, function (authUser) {\n        return React.createElement(Card, {\n          fluid: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(Card.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(Card.Description, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, loading && React.createElement(Loader, {\n          active: true,\n          inline: \"centered\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }), !loading && messages && React.createElement(Button, {\n          size: \"small\",\n          positive: true,\n          type: \"button\",\n          onClick: _this2.onNextPage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, \"Load Older Messages\"), messages && React.createElement(MessageList, {\n          messages: messages.map(function (message) {\n            return _objectSpread({}, message, {\n              user: users ? users[message.userId] : {\n                userId: message.userId\n              }\n            });\n          }),\n          onEditMessage: _this2.onEditMessage,\n          onRemoveMessage: _this2.onRemoveMessage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }), !loading && !messages && React.createElement(Message, {\n          info: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, \"There are no messages ...\")), !loading && React.createElement(Form, {\n          onSubmit: function onSubmit(event) {\n            return _this2.onCreateMessage(event, authUser);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(Form.TextArea, {\n          value: text,\n          onChange: _this2.onChangeText,\n          placeholder: \"Enter your message here...\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }), React.createElement(Button, {\n          primary: true,\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, \"Send \", React.createElement(Icon, {\n          name: \"send\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }))))));\n      });\n    }\n  }]);\n\n  return Messages;\n}(Component);\n\nexport default withFirebase(Messages);","map":{"version":3,"sources":["/home/alex/Documents/CS/React/Fire Market/src/components/Messages/Messages.js"],"names":["React","Component","AuthUserContext","withFirebase","MessageList","Card","Message","Button","Loader","Form","Icon","Messages","props","onListenForMessages","setState","loading","unsubscribe","firebase","messages","orderBy","limit","state","onSnapshot","snapshot","size","forEach","doc","push","data","uid","id","reverse","onChangeText","event","text","target","value","onCreateMessage","authUser","userId","createdAt","serverValue","TIMESTAMP","preventDefault","onEditMessage","message","set","editedAt","onRemoveMessage","remove","onNextPage","users","map","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { AuthUserContext } from '../Session';\nimport { withFirebase } from '../Firebase';\nimport MessageList from './MessageList';\n\nimport {\n  Card,\n  Message,\n  Button,\n  Loader,\n  Form,\n  Icon,\n} from 'semantic-ui-react';\n\nclass Messages extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: '',\n      loading: false,\n      messages: [],\n      limit: 5,\n    };\n  }\n\n  componentDidMount() {\n    this.onListenForMessages();\n  }\n\n  onListenForMessages = () => {\n    this.setState({ loading: true });\n\n    this.unsubscribe = this.props.firebase\n      .messages()\n      .orderBy('createdAt', 'desc')\n      .limit(this.state.limit)\n      .onSnapshot(snapshot => {\n        if (snapshot.size) {\n          let messages = [];\n          snapshot.forEach(doc =>\n            messages.push({ ...doc.data(), uid: doc.id }),\n          );\n\n          this.setState({\n            messages: messages.reverse(),\n            loading: false,\n          });\n        } else {\n          this.setState({ messages: null, loading: false });\n        }\n      });\n  };\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  onChangeText = event => {\n    this.setState({ text: event.target.value });\n  };\n\n  onCreateMessage = (event, authUser) => {\n    this.props.firebase.messages().push({\n      text: this.state.text,\n      userId: authUser.uid,\n      createdAt: this.props.firebase.serverValue.TIMESTAMP,\n    });\n\n    this.setState({ text: '' });\n\n    event.preventDefault();\n  };\n\n  onEditMessage = (message, text) => {\n    this.props.firebase.message(message.uid).set({\n      ...message,\n      text,\n      editedAt: this.props.firebase.serverValue.TIMESTAMP,\n    });\n  };\n\n  onRemoveMessage = uid => {\n    this.props.firebase.message(uid).remove();\n  };\n\n  onNextPage = () => {\n    this.setState(\n      state => ({ limit: state.limit + 5 }),\n      this.onListenForMessages,\n    );\n  };\n\n  render() {\n    const { users } = this.props;\n    const { text, messages, loading } = this.state;\n    return (\n      <AuthUserContext.Consumer>\n        {authUser => (\n          <Card fluid={true}>\n            <Card.Content>\n              <Card.Description>\n                {loading && <Loader active inline=\"centered\" />}\n\n                {!loading && messages && (\n                  <Button\n                    size=\"small\"\n                    positive\n                    type=\"button\"\n                    onClick={this.onNextPage}\n                  >\n                    Load Older Messages\n                  </Button>\n                )}\n\n                {messages && (\n                  <MessageList\n                    messages={messages.map(message => ({\n                      ...message,\n                      user: users\n                        ? users[message.userId]\n                        : { userId: message.userId },\n                    }))}\n                    onEditMessage={this.onEditMessage}\n                    onRemoveMessage={this.onRemoveMessage}\n                  />\n                )}\n\n                {!loading && !messages && (\n                  <Message info>\n                    <p>There are no messages ...</p>\n                  </Message>\n                )}\n\n                {!loading && (\n                  <Form\n                    onSubmit={event =>\n                      this.onCreateMessage(event, authUser)\n                    }\n                  >\n                    <Form.TextArea\n                      value={text}\n                      onChange={this.onChangeText}\n                      placeholder=\"Enter your message here...\"\n                    />\n                    <Button primary type=\"submit\">\n                      Send <Icon name=\"send\" />\n                    </Button>\n                  </Form>\n                )}\n              </Card.Description>\n            </Card.Content>\n          </Card>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nexport default withFirebase(Messages);\n"]},"metadata":{},"sourceType":"module"}
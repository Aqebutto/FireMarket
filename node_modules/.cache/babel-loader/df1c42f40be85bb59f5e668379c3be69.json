{"ast":null,"code":"import _classCallCheck from \"/home/alex/Documents/CS/React/Fire Market/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/alex/Documents/CS/React/Fire Market/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/alex/Documents/CS/React/Fire Market/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/alex/Documents/CS/React/Fire Market/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/alex/Documents/CS/React/Fire Market/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/alex/Documents/CS/React/Fire Market/src/components/product/Categories.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport GridList, { GridListTile } from \"@material-ui/core/GridList\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Products from \"./Products\";\nimport { withFirebase } from \"../Firebase\";\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-around\",\n      overflow: \"hidden\",\n      background: theme.palette.background.paper\n    },\n    gridList: {\n      flexWrap: \"nowrap\",\n      width: \"100%\",\n      transform: \"translateZ(0)\"\n    },\n    tileTitle: {\n      verticalAlign: \"middle\",\n      lineHeight: 2.5,\n      textAlign: \"center\",\n      fontSize: \"1.5em\",\n      margin: \"0 4px 0 0\"\n    },\n    card: {\n      margin: \"auto\",\n      marginTop: 20\n    },\n    title: {\n      padding: \"\".concat(theme.spacing.unit * 3, \"px \").concat(theme.spacing.unit * 2.5, \"px \").concat(theme.spacing.unit * 2, \"px\"),\n      color: theme.palette.openTitle,\n      backgroundColor: \"#80808024\",\n      fontSize: \"1.1em\"\n    },\n    icon: {\n      verticalAlign: \"sub\",\n      color: \"#738272\",\n      fontSize: \"0.9em\"\n    },\n    link: {\n      color: \"#4d6538\",\n      textShadow: \"0px 2px 12px #ffffff\",\n      cursor: \"pointer\"\n    }\n  };\n};\n\nvar Categories =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Categories, _Component);\n\n  function Categories() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Categories);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Categories)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      products: [],\n      selected: \"\"\n    };\n\n    _this.componentWillReceiveProps = function (props) {\n      _this.setState({\n        selected: props.categories[0]\n      });\n\n      _this.props.firebase.list({\n        category: props.categories[0]\n      }).then(function (data) {\n        if (data.error) {\n          console.log(data.error);\n        } else {\n          _this.setState({\n            products: data\n          });\n        }\n      });\n    };\n\n    _this.listbyCategory = function (category) {\n      return function (event) {\n        _this.setState({\n          selected: category\n        });\n\n        _this.props.firebase.list({\n          category: category\n        }).then(function (data) {\n          if (data.error) {\n            console.log(data.error);\n          } else {\n            _this.setState({\n              products: data\n            });\n          }\n        });\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(Categories, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: classes.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        type: \"title\",\n        className: classes.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Explore by category\"), React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(GridList, {\n        className: classes.gridList,\n        cols: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, this.props.categories.map(function (tile, i) {\n        React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, tile);\n      }))), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(Products, {\n        products: this.state.products,\n        searched: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Categories;\n}(Component);\n\nCategories.propTypes = {\n  classes: PropTypes.object.isRequired,\n  categories: PropTypes.array.isRequired\n};\nexport default withFirebase(withStyles(styles)(Categories));","map":{"version":3,"sources":["/home/alex/Documents/CS/React/Fire Market/src/components/product/Categories.js"],"names":["React","Component","PropTypes","withStyles","Card","Typography","Divider","GridList","GridListTile","Icon","Products","withFirebase","styles","theme","root","display","flexWrap","justifyContent","overflow","background","palette","paper","gridList","width","transform","tileTitle","verticalAlign","lineHeight","textAlign","fontSize","margin","card","marginTop","title","padding","spacing","unit","color","openTitle","backgroundColor","icon","link","textShadow","cursor","Categories","state","products","selected","componentWillReceiveProps","props","setState","categories","firebase","list","category","then","data","error","console","log","listbyCategory","event","classes","map","tile","i","propTypes","object","isRequired","array"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport GridList, { GridListTile } from \"@material-ui/core/GridList\";\nimport Icon from \"@material-ui/core/Icon\";\n\nimport Products from \"./Products\";\nimport { withFirebase } from \"../Firebase\";\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    background: theme.palette.background.paper\n  },\n  gridList: {\n    flexWrap: \"nowrap\",\n    width: \"100%\",\n    transform: \"translateZ(0)\"\n  },\n  tileTitle: {\n    verticalAlign: \"middle\",\n    lineHeight: 2.5,\n    textAlign: \"center\",\n    fontSize: \"1.5em\",\n    margin: \"0 4px 0 0\"\n  },\n  card: {\n    margin: \"auto\",\n    marginTop: 20\n  },\n  title: {\n    padding: `${theme.spacing.unit * 3}px ${theme.spacing.unit * 2.5}px ${theme\n      .spacing.unit * 2}px`,\n    color: theme.palette.openTitle,\n    backgroundColor: \"#80808024\",\n    fontSize: \"1.1em\"\n  },\n  icon: {\n    verticalAlign: \"sub\",\n    color: \"#738272\",\n    fontSize: \"0.9em\"\n  },\n  link: {\n    color: \"#4d6538\",\n    textShadow: \"0px 2px 12px #ffffff\",\n    cursor: \"pointer\"\n  }\n});\n\nclass Categories extends Component {\n  state = {\n    products: [],\n    selected: \"\"\n  };\n  componentWillReceiveProps = props => {\n    this.setState({ selected: props.categories[0] });\n    this.props.firebase\n      .list({\n        category: props.categories[0]\n      })\n      .then(data => {\n        if (data.error) {\n          console.log(data.error);\n        } else {\n          this.setState({ products: data });\n        }\n      });\n  };\n\n  listbyCategory = category => event => {\n    this.setState({ selected: category });\n    this.props.firebase\n      .list({\n        category: category\n      })\n      .then(data => {\n        if (data.error) {\n          console.log(data.error);\n        } else {\n          this.setState({ products: data });\n        }\n      });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <Card className={classes.card}>\n          <Typography type=\"title\" className={classes.title}>\n            Explore by category\n          </Typography>\n          <div className={classes.root}>\n            <GridList className={classes.gridList} cols={4}>\n              {this.props.categories.map((tile, i) => {\n                <p>{tile}</p>;\n              })}\n              {/*               {this.props.categories.map((tile, i) => (\n                <GridListTile\n                  key={i}\n                  className={classes.tileTitle}\n                  style={{\n                    height: \"64px\",\n                    backgroundColor:\n                      this.state.selected === tile\n                        ? \"rgba(95, 139, 137, 0.56)\"\n                        : \"rgba(95, 124, 139, 0.32)\"\n                  }}\n                >\n                  <span\n                    className={classes.link}\n                    onClick={this.listbyCategory(tile)}\n                  >\n                    {tile}{\" \"}\n                    <Icon className={classes.icon}>\n                      {this.state.selected === tile && \"arrow_drop_down\"}\n                    </Icon>\n                  </span>\n                </GridListTile>\n              ))} */}\n            </GridList>\n          </div>\n          <Divider />\n          <Products products={this.state.products} searched={false} />\n        </Card>\n      </div>\n    );\n  }\n}\nCategories.propTypes = {\n  classes: PropTypes.object.isRequired,\n  categories: PropTypes.array.isRequired\n};\n\nexport default withFirebase(withStyles(styles)(Categories));\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var create = function create(params, credentials, order, token) {\n  return fetch('/api/orders/' + params.userId, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + credentials.t\n    },\n    body: JSON.stringify({\n      order: order,\n      token: token\n    })\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\n\nvar listByShop = function listByShop(params, credentials) {\n  return fetch('/api/orders/shop/' + params.shopId, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer ' + credentials.t\n    }\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    console.log(err);\n  });\n};\n\nvar update = function update(params, credentials, product) {\n  return fetch('/api/order/status/' + params.shopId, {\n    method: 'PUT',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + credentials.t\n    },\n    body: JSON.stringify(product)\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    console.log(err);\n  });\n};\n\nvar cancelProduct = function cancelProduct(params, credentials, product) {\n  return fetch('/api/order/' + params.shopId + '/cancel/' + params.productId, {\n    method: 'PUT',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + credentials.t\n    },\n    body: JSON.stringify(product)\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    console.log(err);\n  });\n};\n\nvar processCharge = function processCharge(params, credentials, product) {\n  return fetch('/api/order/' + params.orderId + '/charge/' + params.userId + '/' + params.shopId, {\n    method: 'PUT',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + credentials.t\n    },\n    body: JSON.stringify(product)\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    console.log(err);\n  });\n};\n\nvar getStatusValues = function getStatusValues() {\n  return fetch('/api/order/status_values', {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\n\nvar listByUser = function listByUser(params, credentials) {\n  return fetch('/api/orders/user/' + params.userId, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer ' + credentials.t\n    }\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    console.log(err);\n  });\n};\n\nvar read = function read(params, credentials) {\n  return fetch('/api/order/' + params.orderId, {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\n\nexport { create, listByShop, update, cancelProduct, processCharge, getStatusValues, listByUser, read };","map":{"version":3,"sources":["/home/alex/Documents/CS/React/Fire Market/src/components/order/api-order.js"],"names":["create","params","credentials","order","token","fetch","userId","method","headers","t","body","JSON","stringify","then","response","json","catch","err","console","log","listByShop","shopId","update","product","cancelProduct","productId","processCharge","orderId","getStatusValues","listByUser","read"],"mappings":"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","sourcesContent":["const create = (params, credentials, order, token) => {\n  return fetch('/api/orders/'+params.userId, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + credentials.t\n      },\n      body: JSON.stringify({order: order, token:token})\n    })\n    .then((response) => {\n      return response.json()\n    }).catch((err) => console.log(err))\n}\n\nconst listByShop = (params, credentials) => {\n  return fetch('/api/orders/shop/'+params.shopId, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer ' + credentials.t\n    }\n  }).then((response) => {\n    return response.json()\n  }).catch((err) => {\n    console.log(err)\n  })\n}\n\nconst update = (params, credentials, product) => {\n  return fetch('/api/order/status/' + params.shopId, {\n    method: 'PUT',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + credentials.t\n    },\n    body: JSON.stringify(product)\n  }).then((response) => {\n    return response.json()\n  }).catch((err) => {\n    console.log(err)\n  })\n}\n\nconst cancelProduct = (params, credentials, product) => {\n  return fetch('/api/order/'+params.shopId+'/cancel/'+params.productId, {\n    method: 'PUT',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + credentials.t\n    },\n    body: JSON.stringify(product)\n  }).then((response) => {\n    return response.json()\n  }).catch((err) => {\n    console.log(err)\n  })\n}\n\nconst processCharge = (params, credentials, product) => {\n  return fetch('/api/order/'+params.orderId+'/charge/'+params.userId+'/'+params.shopId, {\n    method: 'PUT',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + credentials.t\n    },\n    body: JSON.stringify(product)\n  }).then((response) => {\n    return response.json()\n  }).catch((err) => {\n    console.log(err)\n  })\n}\n\nconst getStatusValues = () => {\n  return fetch('/api/order/status_values', {\n    method: 'GET'\n  }).then((response) => {\n    return response.json()\n  }).catch((err) => console.log(err))\n}\n\nconst listByUser = (params, credentials) => {\n  return fetch('/api/orders/user/'+params.userId, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer ' + credentials.t\n    }\n  }).then((response) => {\n    return response.json()\n  }).catch((err) => {\n    console.log(err)\n  })\n}\n\nconst read = (params, credentials) => {\n  return fetch('/api/order/' + params.orderId, {\n    method: 'GET'\n  }).then((response) => {\n    return response.json()\n  }).catch((err) => console.log(err))\n}\n\nexport {\n  create,\n  listByShop,\n  update,\n  cancelProduct,\n  processCharge,\n  getStatusValues,\n  listByUser,\n  read\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"/home/alex/Documents/CS/React/Fire Market/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/alex/Documents/CS/React/Fire Market/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/alex/Documents/CS/React/Fire Market/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/alex/Documents/CS/React/Fire Market/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/alex/Documents/CS/React/Fire Market/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/alex/Documents/CS/React/Fire Market/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/alex/Documents/CS/React/Fire Market/src/components/Account/index.js\";\nimport React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { AuthUserContext, withAuthorization, withEmailVerification } from '../Session';\nimport { withFirebase } from '../Firebase';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\nimport { Grid, Card, Header, Message, Form, Button } from 'semantic-ui-react';\nvar SIGN_IN_METHODS = [{\n  id: 'password',\n  provider: null\n}, {\n  id: 'google.com',\n  provider: 'googleProvider'\n}, {\n  id: 'facebook.com',\n  provider: 'facebookProvider'\n}, {\n  id: 'twitter.com',\n  provider: 'twitterProvider'\n}];\n\nvar AccountPage = function AccountPage() {\n  return React.createElement(AuthUserContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, function (authUser) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Account: \", authUser.email), React.createElement(Grid, {\n      columns: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Card, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Reset Password\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(PasswordForgetForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }))))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Card, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"New Password\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(PasswordChangeForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })))))), React.createElement(LoginManagement, {\n      authUser: authUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }));\n  });\n};\n\nvar LoginManagementBase =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginManagementBase, _Component);\n\n  function LoginManagementBase(props) {\n    var _this;\n\n    _classCallCheck(this, LoginManagementBase);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginManagementBase).call(this, props));\n\n    _this.fetchSignInMethods = function () {\n      _this.props.firebase.auth.fetchSignInMethodsForEmail(_this.props.authUser.email).then(function (activeSignInMethods) {\n        return _this.setState({\n          activeSignInMethods: activeSignInMethods,\n          error: null\n        });\n      }).catch(function (error) {\n        return _this.setState({\n          error: error\n        });\n      });\n    };\n\n    _this.onSocialLoginLink = function (provider) {\n      _this.props.firebase.auth.currentUser.linkWithPopup(_this.props.firebase[provider]).then(_this.fetchSignInMethods).catch(function (error) {\n        return _this.setState({\n          error: error\n        });\n      });\n    };\n\n    _this.onDefaultLoginLink = function (password) {\n      var credential = _this.props.firebase.emailAuthProvider.credential(_this.props.authUser.email, password);\n\n      _this.props.firebase.auth.currentUser.linkAndRetrieveDataWithCredential(credential).then(_this.fetchSignInMethods).catch(function (error) {\n        return _this.setState({\n          error: error\n        });\n      });\n    };\n\n    _this.onUnlink = function (providerId) {\n      _this.props.firebase.auth.currentUser.unlink(providerId).then(_this.fetchSignInMethods).catch(function (error) {\n        return _this.setState({\n          error: error\n        });\n      });\n    };\n\n    _this.state = {\n      activeSignInMethods: [],\n      error: null\n    };\n    return _this;\n  }\n\n  _createClass(LoginManagementBase, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchSignInMethods();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          activeSignInMethods = _this$state.activeSignInMethods,\n          error = _this$state.error;\n      return React.createElement(Card, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Sign In Methods\"), React.createElement(Card.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, error && React.createElement(Message, {\n        negative: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, error.message)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, SIGN_IN_METHODS.map(function (signInMethod) {\n        var onlyOneLeft = activeSignInMethods.length === 1;\n        var isEnabled = activeSignInMethods.includes(signInMethod.id);\n        return React.createElement(\"span\", {\n          key: signInMethod.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, signInMethod.id === 'password' ? React.createElement(Grid, {\n          columns: 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, React.createElement(Grid.Column, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(DefaultLoginToggle, {\n          onlyOneLeft: onlyOneLeft,\n          isEnabled: isEnabled,\n          signInMethod: signInMethod,\n          onLink: _this2.onDefaultLoginLink,\n          onUnlink: _this2.onUnlink,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }))) : React.createElement(SocialLoginToggle, {\n          onlyOneLeft: onlyOneLeft,\n          isEnabled: isEnabled,\n          signInMethod: signInMethod,\n          onLink: _this2.onSocialLoginLink,\n          onUnlink: _this2.onUnlink,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }));\n      })))));\n    }\n  }]);\n\n  return LoginManagementBase;\n}(Component);\n\nvar SocialLoginToggle = function SocialLoginToggle(_ref) {\n  var onlyOneLeft = _ref.onlyOneLeft,\n      isEnabled = _ref.isEnabled,\n      signInMethod = _ref.signInMethod,\n      onLink = _ref.onLink,\n      onUnlink = _ref.onUnlink;\n  return isEnabled ? React.createElement(Button, {\n    color: signInMethod.id === 'google.com' ? 'google plus' : signInMethod.id === 'facebook.com' ? 'facebook' : signInMethod.id === 'twitter.com' ? 'twitter' : '',\n    type: \"button\",\n    onClick: function onClick() {\n      return onUnlink(signInMethod.id);\n    },\n    disabled: onlyOneLeft,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, \"Deactivate \", signInMethod.id) : React.createElement(Button, {\n    color: signInMethod.id === 'google.com' ? 'google plus' : signInMethod.id === 'facebook.com' ? 'facebook' : signInMethod.id === 'twitter.com' ? 'twitter' : '',\n    type: \"button\",\n    onClick: function onClick() {\n      return onLink(signInMethod.provider);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"Link \", signInMethod.id);\n};\n\nvar DefaultLoginToggle =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(DefaultLoginToggle, _Component2);\n\n  function DefaultLoginToggle(props) {\n    var _this3;\n\n    _classCallCheck(this, DefaultLoginToggle);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(DefaultLoginToggle).call(this, props));\n\n    _this3.onSubmit = function (event) {\n      event.preventDefault();\n\n      _this3.props.onLink(_this3.state.passwordOne);\n\n      _this3.setState({\n        passwordOne: '',\n        passwordTwo: ''\n      });\n    };\n\n    _this3.onChange = function (event) {\n      _this3.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this3.state = {\n      passwordOne: '',\n      passwordTwo: ''\n    };\n    return _this3;\n  }\n\n  _createClass(DefaultLoginToggle, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          onlyOneLeft = _this$props.onlyOneLeft,\n          isEnabled = _this$props.isEnabled,\n          signInMethod = _this$props.signInMethod,\n          onUnlink = _this$props.onUnlink;\n      var _this$state2 = this.state,\n          passwordOne = _this$state2.passwordOne,\n          passwordTwo = _this$state2.passwordTwo;\n      var isInvalid = passwordOne !== passwordTwo || passwordOne === '';\n      return isEnabled ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"button\",\n        onClick: function onClick() {\n          return onUnlink(signInMethod.id);\n        },\n        disabled: onlyOneLeft,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, \"Deactivate \", signInMethod.id), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      })) : React.createElement(Form, {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        widths: \"equal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"New Password\"), React.createElement(\"input\", {\n        name: \"passwordOne\",\n        value: passwordOne,\n        onChange: this.onChange,\n        type: \"password\",\n        placeholder: \"New Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, \"Confirm Password\"), React.createElement(\"input\", {\n        name: \"passwordTwo\",\n        value: passwordTwo,\n        onChange: this.onChange,\n        type: \"password\",\n        placeholder: \"Confirm New Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        primary: true,\n        disabled: isInvalid,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, \"Link \", signInMethod.id));\n    }\n  }]);\n\n  return DefaultLoginToggle;\n}(Component);\n\nvar LoginManagement = withFirebase(LoginManagementBase);\n\nvar condition = function condition(authUser) {\n  return !!authUser;\n};\n\nexport default compose(withEmailVerification, withAuthorization(condition))(AccountPage);","map":{"version":3,"sources":["/home/alex/Documents/CS/React/Fire Market/src/components/Account/index.js"],"names":["React","Component","compose","AuthUserContext","withAuthorization","withEmailVerification","withFirebase","PasswordForgetForm","PasswordChangeForm","Grid","Card","Header","Message","Form","Button","SIGN_IN_METHODS","id","provider","AccountPage","authUser","email","LoginManagementBase","props","fetchSignInMethods","firebase","auth","fetchSignInMethodsForEmail","then","activeSignInMethods","setState","error","catch","onSocialLoginLink","currentUser","linkWithPopup","onDefaultLoginLink","password","credential","emailAuthProvider","linkAndRetrieveDataWithCredential","onUnlink","providerId","unlink","state","message","map","signInMethod","onlyOneLeft","length","isEnabled","includes","SocialLoginToggle","onLink","DefaultLoginToggle","onSubmit","event","preventDefault","passwordOne","passwordTwo","onChange","target","name","value","isInvalid","LoginManagement","condition"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { compose } from 'recompose';\n\nimport {\n  AuthUserContext,\n  withAuthorization,\n  withEmailVerification,\n} from '../Session';\nimport { withFirebase } from '../Firebase';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\n\nimport {\n  Grid,\n  Card,\n  Header,\n  Message,\n  Form,\n  Button,\n} from 'semantic-ui-react';\n\nconst SIGN_IN_METHODS = [\n  {\n    id: 'password',\n    provider: null,\n  },\n  {\n    id: 'google.com',\n    provider: 'googleProvider',\n  },\n  {\n    id: 'facebook.com',\n    provider: 'facebookProvider',\n  },\n  {\n    id: 'twitter.com',\n    provider: 'twitterProvider',\n  },\n];\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <div>\n        <Header as=\"h2\">Account: {authUser.email}</Header>\n        <Grid columns={2}>\n          <Grid.Column>\n            <Card fluid={true}>\n              <Card.Content>\n                <Card.Header>Reset Password</Card.Header>\n                <Card.Description>\n                  <PasswordForgetForm />\n                </Card.Description>\n              </Card.Content>\n            </Card>\n          </Grid.Column>\n          <Grid.Column>\n            <Card fluid={true}>\n              <Card.Content>\n                <Card.Header>New Password</Card.Header>\n                <Card.Description>\n                  <PasswordChangeForm />\n                </Card.Description>\n              </Card.Content>\n            </Card>\n          </Grid.Column>\n        </Grid>\n        <LoginManagement authUser={authUser} />\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nclass LoginManagementBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeSignInMethods: [],\n      error: null,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchSignInMethods();\n  }\n\n  fetchSignInMethods = () => {\n    this.props.firebase.auth\n      .fetchSignInMethodsForEmail(this.props.authUser.email)\n      .then(activeSignInMethods =>\n        this.setState({ activeSignInMethods, error: null }),\n      )\n      .catch(error => this.setState({ error }));\n  };\n\n  onSocialLoginLink = provider => {\n    this.props.firebase.auth.currentUser\n      .linkWithPopup(this.props.firebase[provider])\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  onDefaultLoginLink = password => {\n    const credential = this.props.firebase.emailAuthProvider.credential(\n      this.props.authUser.email,\n      password,\n    );\n\n    this.props.firebase.auth.currentUser\n      .linkAndRetrieveDataWithCredential(credential)\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  onUnlink = providerId => {\n    this.props.firebase.auth.currentUser\n      .unlink(providerId)\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  render() {\n    const { activeSignInMethods, error } = this.state;\n\n    return (\n      <Card fluid={true}>\n        <Card.Content>\n          <Card.Header>Sign In Methods</Card.Header>\n          <Card.Description>\n            {error && (\n              <Message negative>\n                <p>{error.message}</p>\n              </Message>\n            )}\n            <div>\n              {SIGN_IN_METHODS.map(signInMethod => {\n                const onlyOneLeft = activeSignInMethods.length === 1;\n                const isEnabled = activeSignInMethods.includes(\n                  signInMethod.id,\n                );\n\n                return (\n                  <span key={signInMethod.id}>\n                    {signInMethod.id === 'password' ? (\n                      <Grid columns={1}>\n                        <Grid.Column>\n                          <DefaultLoginToggle\n                            onlyOneLeft={onlyOneLeft}\n                            isEnabled={isEnabled}\n                            signInMethod={signInMethod}\n                            onLink={this.onDefaultLoginLink}\n                            onUnlink={this.onUnlink}\n                          />\n                          <br />\n                        </Grid.Column>\n                      </Grid>\n                    ) : (\n                      <SocialLoginToggle\n                        onlyOneLeft={onlyOneLeft}\n                        isEnabled={isEnabled}\n                        signInMethod={signInMethod}\n                        onLink={this.onSocialLoginLink}\n                        onUnlink={this.onUnlink}\n                      />\n                    )}\n                  </span>\n                );\n              })}\n            </div>\n          </Card.Description>\n        </Card.Content>\n      </Card>\n    );\n  }\n}\n\nconst SocialLoginToggle = ({\n  onlyOneLeft,\n  isEnabled,\n  signInMethod,\n  onLink,\n  onUnlink,\n}) =>\n  isEnabled ? (\n    <Button\n      color={\n        signInMethod.id === 'google.com'\n          ? 'google plus'\n          : signInMethod.id === 'facebook.com'\n          ? 'facebook'\n          : signInMethod.id === 'twitter.com'\n          ? 'twitter'\n          : ''\n      }\n      type=\"button\"\n      onClick={() => onUnlink(signInMethod.id)}\n      disabled={onlyOneLeft}\n    >\n      Deactivate {signInMethod.id}\n    </Button>\n  ) : (\n    <Button\n      color={\n        signInMethod.id === 'google.com'\n          ? 'google plus'\n          : signInMethod.id === 'facebook.com'\n          ? 'facebook'\n          : signInMethod.id === 'twitter.com'\n          ? 'twitter'\n          : ''\n      }\n      type=\"button\"\n      onClick={() => onLink(signInMethod.provider)}\n    >\n      Link {signInMethod.id}\n    </Button>\n  );\n\nclass DefaultLoginToggle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { passwordOne: '', passwordTwo: '' };\n  }\n\n  onSubmit = event => {\n    event.preventDefault();\n\n    this.props.onLink(this.state.passwordOne);\n    this.setState({ passwordOne: '', passwordTwo: '' });\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const {\n      onlyOneLeft,\n      isEnabled,\n      signInMethod,\n      onUnlink,\n    } = this.props;\n\n    const { passwordOne, passwordTwo } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n\n    return isEnabled ? (\n      <span>\n        <Button\n          type=\"button\"\n          onClick={() => onUnlink(signInMethod.id)}\n          disabled={onlyOneLeft}\n        >\n          Deactivate {signInMethod.id}\n        </Button>\n        <br />\n      </span>\n    ) : (\n      <Form onSubmit={this.onSubmit}>\n        <Form.Group widths=\"equal\">\n          <Form.Field>\n            <label>New Password</label>\n            <input\n              name=\"passwordOne\"\n              value={passwordOne}\n              onChange={this.onChange}\n              type=\"password\"\n              placeholder=\"New Password\"\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Confirm Password</label>\n            <input\n              name=\"passwordTwo\"\n              value={passwordTwo}\n              onChange={this.onChange}\n              type=\"password\"\n              placeholder=\"Confirm New Password\"\n            />\n          </Form.Field>\n        </Form.Group>\n        <Button primary disabled={isInvalid} type=\"submit\">\n          Link {signInMethod.id}\n        </Button>\n      </Form>\n    );\n  }\n}\n\nconst LoginManagement = withFirebase(LoginManagementBase);\n\nconst condition = authUser => !!authUser;\n\nexport default compose(\n  withEmailVerification,\n  withAuthorization(condition),\n)(AccountPage);\n"]},"metadata":{},"sourceType":"module"}